//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.27 at 01:59:57 PM CEST 
//


package generated.buildingsmart_tech.mvd_xml_1dot2;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for IfcMetric complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="IfcMetric">
 *   &lt;complexContent>
 *     &lt;extension base="{https://standards.buildingsmart.org/IFC/RELEASE/IFC4/Add2TC1}IfcConstraint">
 *       &lt;sequence>
 *         &lt;element name="DataValue" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;group ref="{https://standards.buildingsmart.org/IFC/RELEASE/IFC4/Add2TC1}IfcMetricValueSelect"/>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="ReferencePath" type="{https://standards.buildingsmart.org/IFC/RELEASE/IFC4/Add2TC1}IfcReference" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="Benchmark" type="{https://standards.buildingsmart.org/IFC/RELEASE/IFC4/Add2TC1}IfcBenchmarkEnum" />
 *       &lt;attribute name="ValueSource" type="{https://standards.buildingsmart.org/IFC/RELEASE/IFC4/Add2TC1}IfcLabel" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "IfcMetric", propOrder = {
    "dataValue",
    "referencePath"
})
public class IfcMetric
    extends IfcConstraint
{

    @XmlElementRef(name = "DataValue", namespace = "https://standards.buildingsmart.org/IFC/RELEASE/IFC4/Add2TC1", type = JAXBElement.class, required = false)
    protected JAXBElement<IfcMetric.DataValue> dataValue;
    @XmlElementRef(name = "ReferencePath", namespace = "https://standards.buildingsmart.org/IFC/RELEASE/IFC4/Add2TC1", type = JAXBElement.class, required = false)
    protected JAXBElement<IfcReference> referencePath;
    @XmlAttribute(name = "Benchmark")
    protected IfcBenchmarkEnum benchmark;
    @XmlAttribute(name = "ValueSource")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String valueSource;

    /**
     * Gets the value of the dataValue property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link IfcMetric.DataValue }{@code >}
     *     
     */
    public JAXBElement<IfcMetric.DataValue> getDataValue() {
        return dataValue;
    }

    /**
     * Sets the value of the dataValue property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link IfcMetric.DataValue }{@code >}
     *     
     */
    public void setDataValue(JAXBElement<IfcMetric.DataValue> value) {
        this.dataValue = value;
    }

    /**
     * Gets the value of the referencePath property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link IfcReference }{@code >}
     *     
     */
    public JAXBElement<IfcReference> getReferencePath() {
        return referencePath;
    }

    /**
     * Sets the value of the referencePath property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link IfcReference }{@code >}
     *     
     */
    public void setReferencePath(JAXBElement<IfcReference> value) {
        this.referencePath = value;
    }

    /**
     * Gets the value of the benchmark property.
     * 
     * @return
     *     possible object is
     *     {@link IfcBenchmarkEnum }
     *     
     */
    public IfcBenchmarkEnum getBenchmark() {
        return benchmark;
    }

    /**
     * Sets the value of the benchmark property.
     * 
     * @param value
     *     allowed object is
     *     {@link IfcBenchmarkEnum }
     *     
     */
    public void setBenchmark(IfcBenchmarkEnum value) {
        this.benchmark = value;
    }

    /**
     * Gets the value of the valueSource property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getValueSource() {
        return valueSource;
    }

    /**
     * Sets the value of the valueSource property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setValueSource(String value) {
        this.valueSource = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;group ref="{https://standards.buildingsmart.org/IFC/RELEASE/IFC4/Add2TC1}IfcMetricValueSelect"/>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "ifcAbsorbedDoseMeasureWrapper",
        "ifcAccelerationMeasureWrapper",
        "ifcAmountOfSubstanceMeasureWrapper",
        "ifcAngularVelocityMeasureWrapper",
        "ifcAppliedValue",
        "ifcAreaDensityMeasureWrapper",
        "ifcAreaMeasureWrapper",
        "ifcBinaryWrapper",
        "ifcBooleanWrapper",
        "ifcComplexNumberWrapper",
        "ifcCompoundPlaneAngleMeasureWrapper",
        "ifcContextDependentMeasureWrapper",
        "ifcCountMeasureWrapper",
        "ifcCurvatureMeasureWrapper",
        "ifcDateWrapper",
        "ifcDateTimeWrapper",
        "ifcDescriptiveMeasureWrapper",
        "ifcDoseEquivalentMeasureWrapper",
        "ifcDurationWrapper",
        "ifcDynamicViscosityMeasureWrapper",
        "ifcElectricCapacitanceMeasureWrapper",
        "ifcElectricChargeMeasureWrapper",
        "ifcElectricConductanceMeasureWrapper",
        "ifcElectricCurrentMeasureWrapper",
        "ifcElectricResistanceMeasureWrapper",
        "ifcElectricVoltageMeasureWrapper",
        "ifcEnergyMeasureWrapper",
        "ifcForceMeasureWrapper",
        "ifcFrequencyMeasureWrapper",
        "ifcHeatFluxDensityMeasureWrapper",
        "ifcHeatingValueMeasureWrapper",
        "ifcIdentifierWrapper",
        "ifcIlluminanceMeasureWrapper",
        "ifcInductanceMeasureWrapper",
        "ifcIntegerWrapper",
        "ifcIntegerCountRateMeasureWrapper",
        "ifcIonConcentrationMeasureWrapper",
        "ifcIsothermalMoistureCapacityMeasureWrapper",
        "ifcKinematicViscosityMeasureWrapper",
        "ifcLabelWrapper",
        "ifcLengthMeasureWrapper",
        "ifcLinearForceMeasureWrapper",
        "ifcLinearMomentMeasureWrapper",
        "ifcLinearStiffnessMeasureWrapper",
        "ifcLinearVelocityMeasureWrapper",
        "ifcLogicalWrapper",
        "ifcLuminousFluxMeasureWrapper",
        "ifcLuminousIntensityDistributionMeasureWrapper",
        "ifcLuminousIntensityMeasureWrapper",
        "ifcMagneticFluxDensityMeasureWrapper",
        "ifcMagneticFluxMeasureWrapper",
        "ifcMassDensityMeasureWrapper",
        "ifcMassFlowRateMeasureWrapper",
        "ifcMassMeasureWrapper",
        "ifcMassPerLengthMeasureWrapper",
        "ifcMeasureWithUnit",
        "ifcModulusOfElasticityMeasureWrapper",
        "ifcModulusOfLinearSubgradeReactionMeasureWrapper",
        "ifcModulusOfRotationalSubgradeReactionMeasureWrapper",
        "ifcModulusOfSubgradeReactionMeasureWrapper",
        "ifcMoistureDiffusivityMeasureWrapper",
        "ifcMolecularWeightMeasureWrapper",
        "ifcMomentOfInertiaMeasureWrapper",
        "ifcMonetaryMeasureWrapper",
        "ifcNonNegativeLengthMeasureWrapper",
        "ifcNormalisedRatioMeasureWrapper",
        "ifcNumericMeasureWrapper",
        "ifcPHMeasureWrapper",
        "ifcParameterValueWrapper",
        "ifcPlanarForceMeasureWrapper",
        "ifcPlaneAngleMeasureWrapper",
        "ifcPositiveIntegerWrapper",
        "ifcPositiveLengthMeasureWrapper",
        "ifcPositivePlaneAngleMeasureWrapper",
        "ifcPositiveRatioMeasureWrapper",
        "ifcPowerMeasureWrapper",
        "ifcPressureMeasureWrapper",
        "ifcRadioActivityMeasureWrapper",
        "ifcRatioMeasureWrapper",
        "ifcRealWrapper",
        "ifcReference",
        "ifcRotationalFrequencyMeasureWrapper",
        "ifcRotationalMassMeasureWrapper",
        "ifcRotationalStiffnessMeasureWrapper",
        "ifcSectionModulusMeasureWrapper",
        "ifcSectionalAreaIntegralMeasureWrapper",
        "ifcShearModulusMeasureWrapper",
        "ifcSolidAngleMeasureWrapper",
        "ifcSoundPowerLevelMeasureWrapper",
        "ifcSoundPowerMeasureWrapper",
        "ifcSoundPressureLevelMeasureWrapper",
        "ifcSoundPressureMeasureWrapper",
        "ifcSpecificHeatCapacityMeasureWrapper",
        "ifcTable",
        "ifcTemperatureGradientMeasureWrapper",
        "ifcTemperatureRateOfChangeMeasureWrapper",
        "ifcTextWrapper",
        "ifcThermalAdmittanceMeasureWrapper",
        "ifcThermalConductivityMeasureWrapper",
        "ifcThermalExpansionCoefficientMeasureWrapper",
        "ifcThermalResistanceMeasureWrapper",
        "ifcThermalTransmittanceMeasureWrapper",
        "ifcThermodynamicTemperatureMeasureWrapper",
        "ifcTimeWrapper",
        "ifcTimeMeasureWrapper",
        "ifcTimeSeries",
        "ifcTimeStampWrapper",
        "ifcTorqueMeasureWrapper",
        "ifcVaporPermeabilityMeasureWrapper",
        "ifcVolumeMeasureWrapper",
        "ifcVolumetricFlowRateMeasureWrapper",
        "ifcWarpingConstantMeasureWrapper",
        "ifcWarpingMomentMeasureWrapper"
    })
    public static class DataValue {

        @XmlElement(name = "IfcAbsorbedDoseMeasure-wrapper", nillable = true)
        protected IfcAbsorbedDoseMeasureWrapper ifcAbsorbedDoseMeasureWrapper;
        @XmlElement(name = "IfcAccelerationMeasure-wrapper", nillable = true)
        protected IfcAccelerationMeasureWrapper ifcAccelerationMeasureWrapper;
        @XmlElement(name = "IfcAmountOfSubstanceMeasure-wrapper", nillable = true)
        protected IfcAmountOfSubstanceMeasureWrapper ifcAmountOfSubstanceMeasureWrapper;
        @XmlElement(name = "IfcAngularVelocityMeasure-wrapper", nillable = true)
        protected IfcAngularVelocityMeasureWrapper ifcAngularVelocityMeasureWrapper;
        @XmlElementRef(name = "IfcAppliedValue", namespace = "https://standards.buildingsmart.org/IFC/RELEASE/IFC4/Add2TC1", type = JAXBElement.class, required = false)
        protected JAXBElement<? extends IfcAppliedValue> ifcAppliedValue;
        @XmlElement(name = "IfcAreaDensityMeasure-wrapper", nillable = true)
        protected IfcAreaDensityMeasureWrapper ifcAreaDensityMeasureWrapper;
        @XmlElement(name = "IfcAreaMeasure-wrapper", nillable = true)
        protected IfcAreaMeasureWrapper ifcAreaMeasureWrapper;
        @XmlElement(name = "IfcBinary-wrapper", nillable = true)
        protected IfcBinaryWrapper ifcBinaryWrapper;
        @XmlElement(name = "IfcBoolean-wrapper", nillable = true)
        protected IfcBooleanWrapper ifcBooleanWrapper;
        @XmlElement(name = "IfcComplexNumber-wrapper", nillable = true)
        protected IfcComplexNumberWrapper ifcComplexNumberWrapper;
        @XmlElement(name = "IfcCompoundPlaneAngleMeasure-wrapper", nillable = true)
        protected IfcCompoundPlaneAngleMeasureWrapper ifcCompoundPlaneAngleMeasureWrapper;
        @XmlElement(name = "IfcContextDependentMeasure-wrapper", nillable = true)
        protected IfcContextDependentMeasureWrapper ifcContextDependentMeasureWrapper;
        @XmlElement(name = "IfcCountMeasure-wrapper", nillable = true)
        protected IfcCountMeasureWrapper ifcCountMeasureWrapper;
        @XmlElement(name = "IfcCurvatureMeasure-wrapper", nillable = true)
        protected IfcCurvatureMeasureWrapper ifcCurvatureMeasureWrapper;
        @XmlElement(name = "IfcDate-wrapper", nillable = true)
        protected IfcDateWrapper ifcDateWrapper;
        @XmlElement(name = "IfcDateTime-wrapper", nillable = true)
        protected IfcDateTimeWrapper ifcDateTimeWrapper;
        @XmlElement(name = "IfcDescriptiveMeasure-wrapper", nillable = true)
        protected IfcDescriptiveMeasureWrapper ifcDescriptiveMeasureWrapper;
        @XmlElement(name = "IfcDoseEquivalentMeasure-wrapper", nillable = true)
        protected IfcDoseEquivalentMeasureWrapper ifcDoseEquivalentMeasureWrapper;
        @XmlElement(name = "IfcDuration-wrapper", nillable = true)
        protected IfcDurationWrapper ifcDurationWrapper;
        @XmlElement(name = "IfcDynamicViscosityMeasure-wrapper", nillable = true)
        protected IfcDynamicViscosityMeasureWrapper ifcDynamicViscosityMeasureWrapper;
        @XmlElement(name = "IfcElectricCapacitanceMeasure-wrapper", nillable = true)
        protected IfcElectricCapacitanceMeasureWrapper ifcElectricCapacitanceMeasureWrapper;
        @XmlElement(name = "IfcElectricChargeMeasure-wrapper", nillable = true)
        protected IfcElectricChargeMeasureWrapper ifcElectricChargeMeasureWrapper;
        @XmlElement(name = "IfcElectricConductanceMeasure-wrapper", nillable = true)
        protected IfcElectricConductanceMeasureWrapper ifcElectricConductanceMeasureWrapper;
        @XmlElement(name = "IfcElectricCurrentMeasure-wrapper", nillable = true)
        protected IfcElectricCurrentMeasureWrapper ifcElectricCurrentMeasureWrapper;
        @XmlElement(name = "IfcElectricResistanceMeasure-wrapper", nillable = true)
        protected IfcElectricResistanceMeasureWrapper ifcElectricResistanceMeasureWrapper;
        @XmlElement(name = "IfcElectricVoltageMeasure-wrapper", nillable = true)
        protected IfcElectricVoltageMeasureWrapper ifcElectricVoltageMeasureWrapper;
        @XmlElement(name = "IfcEnergyMeasure-wrapper", nillable = true)
        protected IfcEnergyMeasureWrapper ifcEnergyMeasureWrapper;
        @XmlElement(name = "IfcForceMeasure-wrapper", nillable = true)
        protected IfcForceMeasureWrapper ifcForceMeasureWrapper;
        @XmlElement(name = "IfcFrequencyMeasure-wrapper", nillable = true)
        protected IfcFrequencyMeasureWrapper ifcFrequencyMeasureWrapper;
        @XmlElement(name = "IfcHeatFluxDensityMeasure-wrapper", nillable = true)
        protected IfcHeatFluxDensityMeasureWrapper ifcHeatFluxDensityMeasureWrapper;
        @XmlElement(name = "IfcHeatingValueMeasure-wrapper", nillable = true)
        protected IfcHeatingValueMeasureWrapper ifcHeatingValueMeasureWrapper;
        @XmlElement(name = "IfcIdentifier-wrapper", nillable = true)
        protected IfcIdentifierWrapper ifcIdentifierWrapper;
        @XmlElement(name = "IfcIlluminanceMeasure-wrapper", nillable = true)
        protected IfcIlluminanceMeasureWrapper ifcIlluminanceMeasureWrapper;
        @XmlElement(name = "IfcInductanceMeasure-wrapper", nillable = true)
        protected IfcInductanceMeasureWrapper ifcInductanceMeasureWrapper;
        @XmlElement(name = "IfcInteger-wrapper", nillable = true)
        protected IfcIntegerWrapper ifcIntegerWrapper;
        @XmlElement(name = "IfcIntegerCountRateMeasure-wrapper", nillable = true)
        protected IfcIntegerCountRateMeasureWrapper ifcIntegerCountRateMeasureWrapper;
        @XmlElement(name = "IfcIonConcentrationMeasure-wrapper", nillable = true)
        protected IfcIonConcentrationMeasureWrapper ifcIonConcentrationMeasureWrapper;
        @XmlElement(name = "IfcIsothermalMoistureCapacityMeasure-wrapper", nillable = true)
        protected IfcIsothermalMoistureCapacityMeasureWrapper ifcIsothermalMoistureCapacityMeasureWrapper;
        @XmlElement(name = "IfcKinematicViscosityMeasure-wrapper", nillable = true)
        protected IfcKinematicViscosityMeasureWrapper ifcKinematicViscosityMeasureWrapper;
        @XmlElement(name = "IfcLabel-wrapper", nillable = true)
        protected IfcLabelWrapper ifcLabelWrapper;
        @XmlElement(name = "IfcLengthMeasure-wrapper", nillable = true)
        protected IfcLengthMeasureWrapper ifcLengthMeasureWrapper;
        @XmlElement(name = "IfcLinearForceMeasure-wrapper", nillable = true)
        protected IfcLinearForceMeasureWrapper ifcLinearForceMeasureWrapper;
        @XmlElement(name = "IfcLinearMomentMeasure-wrapper", nillable = true)
        protected IfcLinearMomentMeasureWrapper ifcLinearMomentMeasureWrapper;
        @XmlElement(name = "IfcLinearStiffnessMeasure-wrapper", nillable = true)
        protected IfcLinearStiffnessMeasureWrapper ifcLinearStiffnessMeasureWrapper;
        @XmlElement(name = "IfcLinearVelocityMeasure-wrapper", nillable = true)
        protected IfcLinearVelocityMeasureWrapper ifcLinearVelocityMeasureWrapper;
        @XmlElement(name = "IfcLogical-wrapper", nillable = true)
        protected IfcLogicalWrapper ifcLogicalWrapper;
        @XmlElement(name = "IfcLuminousFluxMeasure-wrapper", nillable = true)
        protected IfcLuminousFluxMeasureWrapper ifcLuminousFluxMeasureWrapper;
        @XmlElement(name = "IfcLuminousIntensityDistributionMeasure-wrapper", nillable = true)
        protected IfcLuminousIntensityDistributionMeasureWrapper ifcLuminousIntensityDistributionMeasureWrapper;
        @XmlElement(name = "IfcLuminousIntensityMeasure-wrapper", nillable = true)
        protected IfcLuminousIntensityMeasureWrapper ifcLuminousIntensityMeasureWrapper;
        @XmlElement(name = "IfcMagneticFluxDensityMeasure-wrapper", nillable = true)
        protected IfcMagneticFluxDensityMeasureWrapper ifcMagneticFluxDensityMeasureWrapper;
        @XmlElement(name = "IfcMagneticFluxMeasure-wrapper", nillable = true)
        protected IfcMagneticFluxMeasureWrapper ifcMagneticFluxMeasureWrapper;
        @XmlElement(name = "IfcMassDensityMeasure-wrapper", nillable = true)
        protected IfcMassDensityMeasureWrapper ifcMassDensityMeasureWrapper;
        @XmlElement(name = "IfcMassFlowRateMeasure-wrapper", nillable = true)
        protected IfcMassFlowRateMeasureWrapper ifcMassFlowRateMeasureWrapper;
        @XmlElement(name = "IfcMassMeasure-wrapper", nillable = true)
        protected IfcMassMeasureWrapper ifcMassMeasureWrapper;
        @XmlElement(name = "IfcMassPerLengthMeasure-wrapper", nillable = true)
        protected IfcMassPerLengthMeasureWrapper ifcMassPerLengthMeasureWrapper;
        @XmlElement(name = "IfcMeasureWithUnit", nillable = true)
        protected IfcMeasureWithUnit ifcMeasureWithUnit;
        @XmlElement(name = "IfcModulusOfElasticityMeasure-wrapper", nillable = true)
        protected IfcModulusOfElasticityMeasureWrapper ifcModulusOfElasticityMeasureWrapper;
        @XmlElement(name = "IfcModulusOfLinearSubgradeReactionMeasure-wrapper", nillable = true)
        protected IfcModulusOfLinearSubgradeReactionMeasureWrapper ifcModulusOfLinearSubgradeReactionMeasureWrapper;
        @XmlElement(name = "IfcModulusOfRotationalSubgradeReactionMeasure-wrapper", nillable = true)
        protected IfcModulusOfRotationalSubgradeReactionMeasureWrapper ifcModulusOfRotationalSubgradeReactionMeasureWrapper;
        @XmlElement(name = "IfcModulusOfSubgradeReactionMeasure-wrapper", nillable = true)
        protected IfcModulusOfSubgradeReactionMeasureWrapper ifcModulusOfSubgradeReactionMeasureWrapper;
        @XmlElement(name = "IfcMoistureDiffusivityMeasure-wrapper", nillable = true)
        protected IfcMoistureDiffusivityMeasureWrapper ifcMoistureDiffusivityMeasureWrapper;
        @XmlElement(name = "IfcMolecularWeightMeasure-wrapper", nillable = true)
        protected IfcMolecularWeightMeasureWrapper ifcMolecularWeightMeasureWrapper;
        @XmlElement(name = "IfcMomentOfInertiaMeasure-wrapper", nillable = true)
        protected IfcMomentOfInertiaMeasureWrapper ifcMomentOfInertiaMeasureWrapper;
        @XmlElement(name = "IfcMonetaryMeasure-wrapper", nillable = true)
        protected IfcMonetaryMeasureWrapper ifcMonetaryMeasureWrapper;
        @XmlElement(name = "IfcNonNegativeLengthMeasure-wrapper", nillable = true)
        protected IfcNonNegativeLengthMeasureWrapper ifcNonNegativeLengthMeasureWrapper;
        @XmlElement(name = "IfcNormalisedRatioMeasure-wrapper", nillable = true)
        protected IfcNormalisedRatioMeasureWrapper ifcNormalisedRatioMeasureWrapper;
        @XmlElement(name = "IfcNumericMeasure-wrapper", nillable = true)
        protected IfcNumericMeasureWrapper ifcNumericMeasureWrapper;
        @XmlElement(name = "IfcPHMeasure-wrapper", nillable = true)
        protected IfcPHMeasureWrapper ifcPHMeasureWrapper;
        @XmlElement(name = "IfcParameterValue-wrapper", nillable = true)
        protected IfcParameterValueWrapper ifcParameterValueWrapper;
        @XmlElement(name = "IfcPlanarForceMeasure-wrapper", nillable = true)
        protected IfcPlanarForceMeasureWrapper ifcPlanarForceMeasureWrapper;
        @XmlElement(name = "IfcPlaneAngleMeasure-wrapper", nillable = true)
        protected IfcPlaneAngleMeasureWrapper ifcPlaneAngleMeasureWrapper;
        @XmlElement(name = "IfcPositiveInteger-wrapper", nillable = true)
        protected IfcPositiveIntegerWrapper ifcPositiveIntegerWrapper;
        @XmlElement(name = "IfcPositiveLengthMeasure-wrapper", nillable = true)
        protected IfcPositiveLengthMeasureWrapper ifcPositiveLengthMeasureWrapper;
        @XmlElement(name = "IfcPositivePlaneAngleMeasure-wrapper", nillable = true)
        protected IfcPositivePlaneAngleMeasureWrapper ifcPositivePlaneAngleMeasureWrapper;
        @XmlElement(name = "IfcPositiveRatioMeasure-wrapper", nillable = true)
        protected IfcPositiveRatioMeasureWrapper ifcPositiveRatioMeasureWrapper;
        @XmlElement(name = "IfcPowerMeasure-wrapper", nillable = true)
        protected IfcPowerMeasureWrapper ifcPowerMeasureWrapper;
        @XmlElement(name = "IfcPressureMeasure-wrapper", nillable = true)
        protected IfcPressureMeasureWrapper ifcPressureMeasureWrapper;
        @XmlElement(name = "IfcRadioActivityMeasure-wrapper", nillable = true)
        protected IfcRadioActivityMeasureWrapper ifcRadioActivityMeasureWrapper;
        @XmlElement(name = "IfcRatioMeasure-wrapper", nillable = true)
        protected IfcRatioMeasureWrapper ifcRatioMeasureWrapper;
        @XmlElement(name = "IfcReal-wrapper", nillable = true)
        protected IfcRealWrapper ifcRealWrapper;
        @XmlElement(name = "IfcReference", nillable = true)
        protected IfcReference ifcReference;
        @XmlElement(name = "IfcRotationalFrequencyMeasure-wrapper", nillable = true)
        protected IfcRotationalFrequencyMeasureWrapper ifcRotationalFrequencyMeasureWrapper;
        @XmlElement(name = "IfcRotationalMassMeasure-wrapper", nillable = true)
        protected IfcRotationalMassMeasureWrapper ifcRotationalMassMeasureWrapper;
        @XmlElement(name = "IfcRotationalStiffnessMeasure-wrapper", nillable = true)
        protected IfcRotationalStiffnessMeasureWrapper ifcRotationalStiffnessMeasureWrapper;
        @XmlElement(name = "IfcSectionModulusMeasure-wrapper", nillable = true)
        protected IfcSectionModulusMeasureWrapper ifcSectionModulusMeasureWrapper;
        @XmlElement(name = "IfcSectionalAreaIntegralMeasure-wrapper", nillable = true)
        protected IfcSectionalAreaIntegralMeasureWrapper ifcSectionalAreaIntegralMeasureWrapper;
        @XmlElement(name = "IfcShearModulusMeasure-wrapper", nillable = true)
        protected IfcShearModulusMeasureWrapper ifcShearModulusMeasureWrapper;
        @XmlElement(name = "IfcSolidAngleMeasure-wrapper", nillable = true)
        protected IfcSolidAngleMeasureWrapper ifcSolidAngleMeasureWrapper;
        @XmlElement(name = "IfcSoundPowerLevelMeasure-wrapper", nillable = true)
        protected IfcSoundPowerLevelMeasureWrapper ifcSoundPowerLevelMeasureWrapper;
        @XmlElement(name = "IfcSoundPowerMeasure-wrapper", nillable = true)
        protected IfcSoundPowerMeasureWrapper ifcSoundPowerMeasureWrapper;
        @XmlElement(name = "IfcSoundPressureLevelMeasure-wrapper", nillable = true)
        protected IfcSoundPressureLevelMeasureWrapper ifcSoundPressureLevelMeasureWrapper;
        @XmlElement(name = "IfcSoundPressureMeasure-wrapper", nillable = true)
        protected IfcSoundPressureMeasureWrapper ifcSoundPressureMeasureWrapper;
        @XmlElement(name = "IfcSpecificHeatCapacityMeasure-wrapper", nillable = true)
        protected IfcSpecificHeatCapacityMeasureWrapper ifcSpecificHeatCapacityMeasureWrapper;
        @XmlElement(name = "IfcTable", nillable = true)
        protected IfcTable ifcTable;
        @XmlElement(name = "IfcTemperatureGradientMeasure-wrapper", nillable = true)
        protected IfcTemperatureGradientMeasureWrapper ifcTemperatureGradientMeasureWrapper;
        @XmlElement(name = "IfcTemperatureRateOfChangeMeasure-wrapper", nillable = true)
        protected IfcTemperatureRateOfChangeMeasureWrapper ifcTemperatureRateOfChangeMeasureWrapper;
        @XmlElement(name = "IfcText-wrapper", nillable = true)
        protected IfcTextWrapper ifcTextWrapper;
        @XmlElement(name = "IfcThermalAdmittanceMeasure-wrapper", nillable = true)
        protected IfcThermalAdmittanceMeasureWrapper ifcThermalAdmittanceMeasureWrapper;
        @XmlElement(name = "IfcThermalConductivityMeasure-wrapper", nillable = true)
        protected IfcThermalConductivityMeasureWrapper ifcThermalConductivityMeasureWrapper;
        @XmlElement(name = "IfcThermalExpansionCoefficientMeasure-wrapper", nillable = true)
        protected IfcThermalExpansionCoefficientMeasureWrapper ifcThermalExpansionCoefficientMeasureWrapper;
        @XmlElement(name = "IfcThermalResistanceMeasure-wrapper", nillable = true)
        protected IfcThermalResistanceMeasureWrapper ifcThermalResistanceMeasureWrapper;
        @XmlElement(name = "IfcThermalTransmittanceMeasure-wrapper", nillable = true)
        protected IfcThermalTransmittanceMeasureWrapper ifcThermalTransmittanceMeasureWrapper;
        @XmlElement(name = "IfcThermodynamicTemperatureMeasure-wrapper", nillable = true)
        protected IfcThermodynamicTemperatureMeasureWrapper ifcThermodynamicTemperatureMeasureWrapper;
        @XmlElement(name = "IfcTime-wrapper", nillable = true)
        protected IfcTimeWrapper ifcTimeWrapper;
        @XmlElement(name = "IfcTimeMeasure-wrapper", nillable = true)
        protected IfcTimeMeasureWrapper ifcTimeMeasureWrapper;
        @XmlElementRef(name = "IfcTimeSeries", namespace = "https://standards.buildingsmart.org/IFC/RELEASE/IFC4/Add2TC1", type = JAXBElement.class, required = false)
        protected JAXBElement<? extends IfcTimeSeries> ifcTimeSeries;
        @XmlElement(name = "IfcTimeStamp-wrapper", nillable = true)
        protected IfcTimeStampWrapper ifcTimeStampWrapper;
        @XmlElement(name = "IfcTorqueMeasure-wrapper", nillable = true)
        protected IfcTorqueMeasureWrapper ifcTorqueMeasureWrapper;
        @XmlElement(name = "IfcVaporPermeabilityMeasure-wrapper", nillable = true)
        protected IfcVaporPermeabilityMeasureWrapper ifcVaporPermeabilityMeasureWrapper;
        @XmlElement(name = "IfcVolumeMeasure-wrapper", nillable = true)
        protected IfcVolumeMeasureWrapper ifcVolumeMeasureWrapper;
        @XmlElement(name = "IfcVolumetricFlowRateMeasure-wrapper", nillable = true)
        protected IfcVolumetricFlowRateMeasureWrapper ifcVolumetricFlowRateMeasureWrapper;
        @XmlElement(name = "IfcWarpingConstantMeasure-wrapper", nillable = true)
        protected IfcWarpingConstantMeasureWrapper ifcWarpingConstantMeasureWrapper;
        @XmlElement(name = "IfcWarpingMomentMeasure-wrapper", nillable = true)
        protected IfcWarpingMomentMeasureWrapper ifcWarpingMomentMeasureWrapper;

        /**
         * Gets the value of the ifcAbsorbedDoseMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcAbsorbedDoseMeasureWrapper }
         *     
         */
        public IfcAbsorbedDoseMeasureWrapper getIfcAbsorbedDoseMeasureWrapper() {
            return ifcAbsorbedDoseMeasureWrapper;
        }

        /**
         * Sets the value of the ifcAbsorbedDoseMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcAbsorbedDoseMeasureWrapper }
         *     
         */
        public void setIfcAbsorbedDoseMeasureWrapper(IfcAbsorbedDoseMeasureWrapper value) {
            this.ifcAbsorbedDoseMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcAccelerationMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcAccelerationMeasureWrapper }
         *     
         */
        public IfcAccelerationMeasureWrapper getIfcAccelerationMeasureWrapper() {
            return ifcAccelerationMeasureWrapper;
        }

        /**
         * Sets the value of the ifcAccelerationMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcAccelerationMeasureWrapper }
         *     
         */
        public void setIfcAccelerationMeasureWrapper(IfcAccelerationMeasureWrapper value) {
            this.ifcAccelerationMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcAmountOfSubstanceMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcAmountOfSubstanceMeasureWrapper }
         *     
         */
        public IfcAmountOfSubstanceMeasureWrapper getIfcAmountOfSubstanceMeasureWrapper() {
            return ifcAmountOfSubstanceMeasureWrapper;
        }

        /**
         * Sets the value of the ifcAmountOfSubstanceMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcAmountOfSubstanceMeasureWrapper }
         *     
         */
        public void setIfcAmountOfSubstanceMeasureWrapper(IfcAmountOfSubstanceMeasureWrapper value) {
            this.ifcAmountOfSubstanceMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcAngularVelocityMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcAngularVelocityMeasureWrapper }
         *     
         */
        public IfcAngularVelocityMeasureWrapper getIfcAngularVelocityMeasureWrapper() {
            return ifcAngularVelocityMeasureWrapper;
        }

        /**
         * Sets the value of the ifcAngularVelocityMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcAngularVelocityMeasureWrapper }
         *     
         */
        public void setIfcAngularVelocityMeasureWrapper(IfcAngularVelocityMeasureWrapper value) {
            this.ifcAngularVelocityMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcAppliedValue property.
         * 
         * @return
         *     possible object is
         *     {@link JAXBElement }{@code <}{@link IfcCostValue }{@code >}
         *     {@link JAXBElement }{@code <}{@link IfcAppliedValue }{@code >}
         *     
         */
        public JAXBElement<? extends IfcAppliedValue> getIfcAppliedValue() {
            return ifcAppliedValue;
        }

        /**
         * Sets the value of the ifcAppliedValue property.
         * 
         * @param value
         *     allowed object is
         *     {@link JAXBElement }{@code <}{@link IfcCostValue }{@code >}
         *     {@link JAXBElement }{@code <}{@link IfcAppliedValue }{@code >}
         *     
         */
        public void setIfcAppliedValue(JAXBElement<? extends IfcAppliedValue> value) {
            this.ifcAppliedValue = value;
        }

        /**
         * Gets the value of the ifcAreaDensityMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcAreaDensityMeasureWrapper }
         *     
         */
        public IfcAreaDensityMeasureWrapper getIfcAreaDensityMeasureWrapper() {
            return ifcAreaDensityMeasureWrapper;
        }

        /**
         * Sets the value of the ifcAreaDensityMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcAreaDensityMeasureWrapper }
         *     
         */
        public void setIfcAreaDensityMeasureWrapper(IfcAreaDensityMeasureWrapper value) {
            this.ifcAreaDensityMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcAreaMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcAreaMeasureWrapper }
         *     
         */
        public IfcAreaMeasureWrapper getIfcAreaMeasureWrapper() {
            return ifcAreaMeasureWrapper;
        }

        /**
         * Sets the value of the ifcAreaMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcAreaMeasureWrapper }
         *     
         */
        public void setIfcAreaMeasureWrapper(IfcAreaMeasureWrapper value) {
            this.ifcAreaMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcBinaryWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcBinaryWrapper }
         *     
         */
        public IfcBinaryWrapper getIfcBinaryWrapper() {
            return ifcBinaryWrapper;
        }

        /**
         * Sets the value of the ifcBinaryWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcBinaryWrapper }
         *     
         */
        public void setIfcBinaryWrapper(IfcBinaryWrapper value) {
            this.ifcBinaryWrapper = value;
        }

        /**
         * Gets the value of the ifcBooleanWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcBooleanWrapper }
         *     
         */
        public IfcBooleanWrapper getIfcBooleanWrapper() {
            return ifcBooleanWrapper;
        }

        /**
         * Sets the value of the ifcBooleanWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcBooleanWrapper }
         *     
         */
        public void setIfcBooleanWrapper(IfcBooleanWrapper value) {
            this.ifcBooleanWrapper = value;
        }

        /**
         * Gets the value of the ifcComplexNumberWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcComplexNumberWrapper }
         *     
         */
        public IfcComplexNumberWrapper getIfcComplexNumberWrapper() {
            return ifcComplexNumberWrapper;
        }

        /**
         * Sets the value of the ifcComplexNumberWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcComplexNumberWrapper }
         *     
         */
        public void setIfcComplexNumberWrapper(IfcComplexNumberWrapper value) {
            this.ifcComplexNumberWrapper = value;
        }

        /**
         * Gets the value of the ifcCompoundPlaneAngleMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcCompoundPlaneAngleMeasureWrapper }
         *     
         */
        public IfcCompoundPlaneAngleMeasureWrapper getIfcCompoundPlaneAngleMeasureWrapper() {
            return ifcCompoundPlaneAngleMeasureWrapper;
        }

        /**
         * Sets the value of the ifcCompoundPlaneAngleMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcCompoundPlaneAngleMeasureWrapper }
         *     
         */
        public void setIfcCompoundPlaneAngleMeasureWrapper(IfcCompoundPlaneAngleMeasureWrapper value) {
            this.ifcCompoundPlaneAngleMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcContextDependentMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcContextDependentMeasureWrapper }
         *     
         */
        public IfcContextDependentMeasureWrapper getIfcContextDependentMeasureWrapper() {
            return ifcContextDependentMeasureWrapper;
        }

        /**
         * Sets the value of the ifcContextDependentMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcContextDependentMeasureWrapper }
         *     
         */
        public void setIfcContextDependentMeasureWrapper(IfcContextDependentMeasureWrapper value) {
            this.ifcContextDependentMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcCountMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcCountMeasureWrapper }
         *     
         */
        public IfcCountMeasureWrapper getIfcCountMeasureWrapper() {
            return ifcCountMeasureWrapper;
        }

        /**
         * Sets the value of the ifcCountMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcCountMeasureWrapper }
         *     
         */
        public void setIfcCountMeasureWrapper(IfcCountMeasureWrapper value) {
            this.ifcCountMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcCurvatureMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcCurvatureMeasureWrapper }
         *     
         */
        public IfcCurvatureMeasureWrapper getIfcCurvatureMeasureWrapper() {
            return ifcCurvatureMeasureWrapper;
        }

        /**
         * Sets the value of the ifcCurvatureMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcCurvatureMeasureWrapper }
         *     
         */
        public void setIfcCurvatureMeasureWrapper(IfcCurvatureMeasureWrapper value) {
            this.ifcCurvatureMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcDateWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcDateWrapper }
         *     
         */
        public IfcDateWrapper getIfcDateWrapper() {
            return ifcDateWrapper;
        }

        /**
         * Sets the value of the ifcDateWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcDateWrapper }
         *     
         */
        public void setIfcDateWrapper(IfcDateWrapper value) {
            this.ifcDateWrapper = value;
        }

        /**
         * Gets the value of the ifcDateTimeWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcDateTimeWrapper }
         *     
         */
        public IfcDateTimeWrapper getIfcDateTimeWrapper() {
            return ifcDateTimeWrapper;
        }

        /**
         * Sets the value of the ifcDateTimeWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcDateTimeWrapper }
         *     
         */
        public void setIfcDateTimeWrapper(IfcDateTimeWrapper value) {
            this.ifcDateTimeWrapper = value;
        }

        /**
         * Gets the value of the ifcDescriptiveMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcDescriptiveMeasureWrapper }
         *     
         */
        public IfcDescriptiveMeasureWrapper getIfcDescriptiveMeasureWrapper() {
            return ifcDescriptiveMeasureWrapper;
        }

        /**
         * Sets the value of the ifcDescriptiveMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcDescriptiveMeasureWrapper }
         *     
         */
        public void setIfcDescriptiveMeasureWrapper(IfcDescriptiveMeasureWrapper value) {
            this.ifcDescriptiveMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcDoseEquivalentMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcDoseEquivalentMeasureWrapper }
         *     
         */
        public IfcDoseEquivalentMeasureWrapper getIfcDoseEquivalentMeasureWrapper() {
            return ifcDoseEquivalentMeasureWrapper;
        }

        /**
         * Sets the value of the ifcDoseEquivalentMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcDoseEquivalentMeasureWrapper }
         *     
         */
        public void setIfcDoseEquivalentMeasureWrapper(IfcDoseEquivalentMeasureWrapper value) {
            this.ifcDoseEquivalentMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcDurationWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcDurationWrapper }
         *     
         */
        public IfcDurationWrapper getIfcDurationWrapper() {
            return ifcDurationWrapper;
        }

        /**
         * Sets the value of the ifcDurationWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcDurationWrapper }
         *     
         */
        public void setIfcDurationWrapper(IfcDurationWrapper value) {
            this.ifcDurationWrapper = value;
        }

        /**
         * Gets the value of the ifcDynamicViscosityMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcDynamicViscosityMeasureWrapper }
         *     
         */
        public IfcDynamicViscosityMeasureWrapper getIfcDynamicViscosityMeasureWrapper() {
            return ifcDynamicViscosityMeasureWrapper;
        }

        /**
         * Sets the value of the ifcDynamicViscosityMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcDynamicViscosityMeasureWrapper }
         *     
         */
        public void setIfcDynamicViscosityMeasureWrapper(IfcDynamicViscosityMeasureWrapper value) {
            this.ifcDynamicViscosityMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcElectricCapacitanceMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcElectricCapacitanceMeasureWrapper }
         *     
         */
        public IfcElectricCapacitanceMeasureWrapper getIfcElectricCapacitanceMeasureWrapper() {
            return ifcElectricCapacitanceMeasureWrapper;
        }

        /**
         * Sets the value of the ifcElectricCapacitanceMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcElectricCapacitanceMeasureWrapper }
         *     
         */
        public void setIfcElectricCapacitanceMeasureWrapper(IfcElectricCapacitanceMeasureWrapper value) {
            this.ifcElectricCapacitanceMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcElectricChargeMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcElectricChargeMeasureWrapper }
         *     
         */
        public IfcElectricChargeMeasureWrapper getIfcElectricChargeMeasureWrapper() {
            return ifcElectricChargeMeasureWrapper;
        }

        /**
         * Sets the value of the ifcElectricChargeMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcElectricChargeMeasureWrapper }
         *     
         */
        public void setIfcElectricChargeMeasureWrapper(IfcElectricChargeMeasureWrapper value) {
            this.ifcElectricChargeMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcElectricConductanceMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcElectricConductanceMeasureWrapper }
         *     
         */
        public IfcElectricConductanceMeasureWrapper getIfcElectricConductanceMeasureWrapper() {
            return ifcElectricConductanceMeasureWrapper;
        }

        /**
         * Sets the value of the ifcElectricConductanceMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcElectricConductanceMeasureWrapper }
         *     
         */
        public void setIfcElectricConductanceMeasureWrapper(IfcElectricConductanceMeasureWrapper value) {
            this.ifcElectricConductanceMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcElectricCurrentMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcElectricCurrentMeasureWrapper }
         *     
         */
        public IfcElectricCurrentMeasureWrapper getIfcElectricCurrentMeasureWrapper() {
            return ifcElectricCurrentMeasureWrapper;
        }

        /**
         * Sets the value of the ifcElectricCurrentMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcElectricCurrentMeasureWrapper }
         *     
         */
        public void setIfcElectricCurrentMeasureWrapper(IfcElectricCurrentMeasureWrapper value) {
            this.ifcElectricCurrentMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcElectricResistanceMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcElectricResistanceMeasureWrapper }
         *     
         */
        public IfcElectricResistanceMeasureWrapper getIfcElectricResistanceMeasureWrapper() {
            return ifcElectricResistanceMeasureWrapper;
        }

        /**
         * Sets the value of the ifcElectricResistanceMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcElectricResistanceMeasureWrapper }
         *     
         */
        public void setIfcElectricResistanceMeasureWrapper(IfcElectricResistanceMeasureWrapper value) {
            this.ifcElectricResistanceMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcElectricVoltageMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcElectricVoltageMeasureWrapper }
         *     
         */
        public IfcElectricVoltageMeasureWrapper getIfcElectricVoltageMeasureWrapper() {
            return ifcElectricVoltageMeasureWrapper;
        }

        /**
         * Sets the value of the ifcElectricVoltageMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcElectricVoltageMeasureWrapper }
         *     
         */
        public void setIfcElectricVoltageMeasureWrapper(IfcElectricVoltageMeasureWrapper value) {
            this.ifcElectricVoltageMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcEnergyMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcEnergyMeasureWrapper }
         *     
         */
        public IfcEnergyMeasureWrapper getIfcEnergyMeasureWrapper() {
            return ifcEnergyMeasureWrapper;
        }

        /**
         * Sets the value of the ifcEnergyMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcEnergyMeasureWrapper }
         *     
         */
        public void setIfcEnergyMeasureWrapper(IfcEnergyMeasureWrapper value) {
            this.ifcEnergyMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcForceMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcForceMeasureWrapper }
         *     
         */
        public IfcForceMeasureWrapper getIfcForceMeasureWrapper() {
            return ifcForceMeasureWrapper;
        }

        /**
         * Sets the value of the ifcForceMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcForceMeasureWrapper }
         *     
         */
        public void setIfcForceMeasureWrapper(IfcForceMeasureWrapper value) {
            this.ifcForceMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcFrequencyMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcFrequencyMeasureWrapper }
         *     
         */
        public IfcFrequencyMeasureWrapper getIfcFrequencyMeasureWrapper() {
            return ifcFrequencyMeasureWrapper;
        }

        /**
         * Sets the value of the ifcFrequencyMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcFrequencyMeasureWrapper }
         *     
         */
        public void setIfcFrequencyMeasureWrapper(IfcFrequencyMeasureWrapper value) {
            this.ifcFrequencyMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcHeatFluxDensityMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcHeatFluxDensityMeasureWrapper }
         *     
         */
        public IfcHeatFluxDensityMeasureWrapper getIfcHeatFluxDensityMeasureWrapper() {
            return ifcHeatFluxDensityMeasureWrapper;
        }

        /**
         * Sets the value of the ifcHeatFluxDensityMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcHeatFluxDensityMeasureWrapper }
         *     
         */
        public void setIfcHeatFluxDensityMeasureWrapper(IfcHeatFluxDensityMeasureWrapper value) {
            this.ifcHeatFluxDensityMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcHeatingValueMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcHeatingValueMeasureWrapper }
         *     
         */
        public IfcHeatingValueMeasureWrapper getIfcHeatingValueMeasureWrapper() {
            return ifcHeatingValueMeasureWrapper;
        }

        /**
         * Sets the value of the ifcHeatingValueMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcHeatingValueMeasureWrapper }
         *     
         */
        public void setIfcHeatingValueMeasureWrapper(IfcHeatingValueMeasureWrapper value) {
            this.ifcHeatingValueMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcIdentifierWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcIdentifierWrapper }
         *     
         */
        public IfcIdentifierWrapper getIfcIdentifierWrapper() {
            return ifcIdentifierWrapper;
        }

        /**
         * Sets the value of the ifcIdentifierWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcIdentifierWrapper }
         *     
         */
        public void setIfcIdentifierWrapper(IfcIdentifierWrapper value) {
            this.ifcIdentifierWrapper = value;
        }

        /**
         * Gets the value of the ifcIlluminanceMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcIlluminanceMeasureWrapper }
         *     
         */
        public IfcIlluminanceMeasureWrapper getIfcIlluminanceMeasureWrapper() {
            return ifcIlluminanceMeasureWrapper;
        }

        /**
         * Sets the value of the ifcIlluminanceMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcIlluminanceMeasureWrapper }
         *     
         */
        public void setIfcIlluminanceMeasureWrapper(IfcIlluminanceMeasureWrapper value) {
            this.ifcIlluminanceMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcInductanceMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcInductanceMeasureWrapper }
         *     
         */
        public IfcInductanceMeasureWrapper getIfcInductanceMeasureWrapper() {
            return ifcInductanceMeasureWrapper;
        }

        /**
         * Sets the value of the ifcInductanceMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcInductanceMeasureWrapper }
         *     
         */
        public void setIfcInductanceMeasureWrapper(IfcInductanceMeasureWrapper value) {
            this.ifcInductanceMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcIntegerWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcIntegerWrapper }
         *     
         */
        public IfcIntegerWrapper getIfcIntegerWrapper() {
            return ifcIntegerWrapper;
        }

        /**
         * Sets the value of the ifcIntegerWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcIntegerWrapper }
         *     
         */
        public void setIfcIntegerWrapper(IfcIntegerWrapper value) {
            this.ifcIntegerWrapper = value;
        }

        /**
         * Gets the value of the ifcIntegerCountRateMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcIntegerCountRateMeasureWrapper }
         *     
         */
        public IfcIntegerCountRateMeasureWrapper getIfcIntegerCountRateMeasureWrapper() {
            return ifcIntegerCountRateMeasureWrapper;
        }

        /**
         * Sets the value of the ifcIntegerCountRateMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcIntegerCountRateMeasureWrapper }
         *     
         */
        public void setIfcIntegerCountRateMeasureWrapper(IfcIntegerCountRateMeasureWrapper value) {
            this.ifcIntegerCountRateMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcIonConcentrationMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcIonConcentrationMeasureWrapper }
         *     
         */
        public IfcIonConcentrationMeasureWrapper getIfcIonConcentrationMeasureWrapper() {
            return ifcIonConcentrationMeasureWrapper;
        }

        /**
         * Sets the value of the ifcIonConcentrationMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcIonConcentrationMeasureWrapper }
         *     
         */
        public void setIfcIonConcentrationMeasureWrapper(IfcIonConcentrationMeasureWrapper value) {
            this.ifcIonConcentrationMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcIsothermalMoistureCapacityMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcIsothermalMoistureCapacityMeasureWrapper }
         *     
         */
        public IfcIsothermalMoistureCapacityMeasureWrapper getIfcIsothermalMoistureCapacityMeasureWrapper() {
            return ifcIsothermalMoistureCapacityMeasureWrapper;
        }

        /**
         * Sets the value of the ifcIsothermalMoistureCapacityMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcIsothermalMoistureCapacityMeasureWrapper }
         *     
         */
        public void setIfcIsothermalMoistureCapacityMeasureWrapper(IfcIsothermalMoistureCapacityMeasureWrapper value) {
            this.ifcIsothermalMoistureCapacityMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcKinematicViscosityMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcKinematicViscosityMeasureWrapper }
         *     
         */
        public IfcKinematicViscosityMeasureWrapper getIfcKinematicViscosityMeasureWrapper() {
            return ifcKinematicViscosityMeasureWrapper;
        }

        /**
         * Sets the value of the ifcKinematicViscosityMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcKinematicViscosityMeasureWrapper }
         *     
         */
        public void setIfcKinematicViscosityMeasureWrapper(IfcKinematicViscosityMeasureWrapper value) {
            this.ifcKinematicViscosityMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcLabelWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcLabelWrapper }
         *     
         */
        public IfcLabelWrapper getIfcLabelWrapper() {
            return ifcLabelWrapper;
        }

        /**
         * Sets the value of the ifcLabelWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcLabelWrapper }
         *     
         */
        public void setIfcLabelWrapper(IfcLabelWrapper value) {
            this.ifcLabelWrapper = value;
        }

        /**
         * Gets the value of the ifcLengthMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcLengthMeasureWrapper }
         *     
         */
        public IfcLengthMeasureWrapper getIfcLengthMeasureWrapper() {
            return ifcLengthMeasureWrapper;
        }

        /**
         * Sets the value of the ifcLengthMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcLengthMeasureWrapper }
         *     
         */
        public void setIfcLengthMeasureWrapper(IfcLengthMeasureWrapper value) {
            this.ifcLengthMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcLinearForceMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcLinearForceMeasureWrapper }
         *     
         */
        public IfcLinearForceMeasureWrapper getIfcLinearForceMeasureWrapper() {
            return ifcLinearForceMeasureWrapper;
        }

        /**
         * Sets the value of the ifcLinearForceMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcLinearForceMeasureWrapper }
         *     
         */
        public void setIfcLinearForceMeasureWrapper(IfcLinearForceMeasureWrapper value) {
            this.ifcLinearForceMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcLinearMomentMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcLinearMomentMeasureWrapper }
         *     
         */
        public IfcLinearMomentMeasureWrapper getIfcLinearMomentMeasureWrapper() {
            return ifcLinearMomentMeasureWrapper;
        }

        /**
         * Sets the value of the ifcLinearMomentMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcLinearMomentMeasureWrapper }
         *     
         */
        public void setIfcLinearMomentMeasureWrapper(IfcLinearMomentMeasureWrapper value) {
            this.ifcLinearMomentMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcLinearStiffnessMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcLinearStiffnessMeasureWrapper }
         *     
         */
        public IfcLinearStiffnessMeasureWrapper getIfcLinearStiffnessMeasureWrapper() {
            return ifcLinearStiffnessMeasureWrapper;
        }

        /**
         * Sets the value of the ifcLinearStiffnessMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcLinearStiffnessMeasureWrapper }
         *     
         */
        public void setIfcLinearStiffnessMeasureWrapper(IfcLinearStiffnessMeasureWrapper value) {
            this.ifcLinearStiffnessMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcLinearVelocityMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcLinearVelocityMeasureWrapper }
         *     
         */
        public IfcLinearVelocityMeasureWrapper getIfcLinearVelocityMeasureWrapper() {
            return ifcLinearVelocityMeasureWrapper;
        }

        /**
         * Sets the value of the ifcLinearVelocityMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcLinearVelocityMeasureWrapper }
         *     
         */
        public void setIfcLinearVelocityMeasureWrapper(IfcLinearVelocityMeasureWrapper value) {
            this.ifcLinearVelocityMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcLogicalWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcLogicalWrapper }
         *     
         */
        public IfcLogicalWrapper getIfcLogicalWrapper() {
            return ifcLogicalWrapper;
        }

        /**
         * Sets the value of the ifcLogicalWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcLogicalWrapper }
         *     
         */
        public void setIfcLogicalWrapper(IfcLogicalWrapper value) {
            this.ifcLogicalWrapper = value;
        }

        /**
         * Gets the value of the ifcLuminousFluxMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcLuminousFluxMeasureWrapper }
         *     
         */
        public IfcLuminousFluxMeasureWrapper getIfcLuminousFluxMeasureWrapper() {
            return ifcLuminousFluxMeasureWrapper;
        }

        /**
         * Sets the value of the ifcLuminousFluxMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcLuminousFluxMeasureWrapper }
         *     
         */
        public void setIfcLuminousFluxMeasureWrapper(IfcLuminousFluxMeasureWrapper value) {
            this.ifcLuminousFluxMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcLuminousIntensityDistributionMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcLuminousIntensityDistributionMeasureWrapper }
         *     
         */
        public IfcLuminousIntensityDistributionMeasureWrapper getIfcLuminousIntensityDistributionMeasureWrapper() {
            return ifcLuminousIntensityDistributionMeasureWrapper;
        }

        /**
         * Sets the value of the ifcLuminousIntensityDistributionMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcLuminousIntensityDistributionMeasureWrapper }
         *     
         */
        public void setIfcLuminousIntensityDistributionMeasureWrapper(IfcLuminousIntensityDistributionMeasureWrapper value) {
            this.ifcLuminousIntensityDistributionMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcLuminousIntensityMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcLuminousIntensityMeasureWrapper }
         *     
         */
        public IfcLuminousIntensityMeasureWrapper getIfcLuminousIntensityMeasureWrapper() {
            return ifcLuminousIntensityMeasureWrapper;
        }

        /**
         * Sets the value of the ifcLuminousIntensityMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcLuminousIntensityMeasureWrapper }
         *     
         */
        public void setIfcLuminousIntensityMeasureWrapper(IfcLuminousIntensityMeasureWrapper value) {
            this.ifcLuminousIntensityMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcMagneticFluxDensityMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcMagneticFluxDensityMeasureWrapper }
         *     
         */
        public IfcMagneticFluxDensityMeasureWrapper getIfcMagneticFluxDensityMeasureWrapper() {
            return ifcMagneticFluxDensityMeasureWrapper;
        }

        /**
         * Sets the value of the ifcMagneticFluxDensityMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcMagneticFluxDensityMeasureWrapper }
         *     
         */
        public void setIfcMagneticFluxDensityMeasureWrapper(IfcMagneticFluxDensityMeasureWrapper value) {
            this.ifcMagneticFluxDensityMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcMagneticFluxMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcMagneticFluxMeasureWrapper }
         *     
         */
        public IfcMagneticFluxMeasureWrapper getIfcMagneticFluxMeasureWrapper() {
            return ifcMagneticFluxMeasureWrapper;
        }

        /**
         * Sets the value of the ifcMagneticFluxMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcMagneticFluxMeasureWrapper }
         *     
         */
        public void setIfcMagneticFluxMeasureWrapper(IfcMagneticFluxMeasureWrapper value) {
            this.ifcMagneticFluxMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcMassDensityMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcMassDensityMeasureWrapper }
         *     
         */
        public IfcMassDensityMeasureWrapper getIfcMassDensityMeasureWrapper() {
            return ifcMassDensityMeasureWrapper;
        }

        /**
         * Sets the value of the ifcMassDensityMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcMassDensityMeasureWrapper }
         *     
         */
        public void setIfcMassDensityMeasureWrapper(IfcMassDensityMeasureWrapper value) {
            this.ifcMassDensityMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcMassFlowRateMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcMassFlowRateMeasureWrapper }
         *     
         */
        public IfcMassFlowRateMeasureWrapper getIfcMassFlowRateMeasureWrapper() {
            return ifcMassFlowRateMeasureWrapper;
        }

        /**
         * Sets the value of the ifcMassFlowRateMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcMassFlowRateMeasureWrapper }
         *     
         */
        public void setIfcMassFlowRateMeasureWrapper(IfcMassFlowRateMeasureWrapper value) {
            this.ifcMassFlowRateMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcMassMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcMassMeasureWrapper }
         *     
         */
        public IfcMassMeasureWrapper getIfcMassMeasureWrapper() {
            return ifcMassMeasureWrapper;
        }

        /**
         * Sets the value of the ifcMassMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcMassMeasureWrapper }
         *     
         */
        public void setIfcMassMeasureWrapper(IfcMassMeasureWrapper value) {
            this.ifcMassMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcMassPerLengthMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcMassPerLengthMeasureWrapper }
         *     
         */
        public IfcMassPerLengthMeasureWrapper getIfcMassPerLengthMeasureWrapper() {
            return ifcMassPerLengthMeasureWrapper;
        }

        /**
         * Sets the value of the ifcMassPerLengthMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcMassPerLengthMeasureWrapper }
         *     
         */
        public void setIfcMassPerLengthMeasureWrapper(IfcMassPerLengthMeasureWrapper value) {
            this.ifcMassPerLengthMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcMeasureWithUnit property.
         * 
         * @return
         *     possible object is
         *     {@link IfcMeasureWithUnit }
         *     
         */
        public IfcMeasureWithUnit getIfcMeasureWithUnit() {
            return ifcMeasureWithUnit;
        }

        /**
         * Sets the value of the ifcMeasureWithUnit property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcMeasureWithUnit }
         *     
         */
        public void setIfcMeasureWithUnit(IfcMeasureWithUnit value) {
            this.ifcMeasureWithUnit = value;
        }

        /**
         * Gets the value of the ifcModulusOfElasticityMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcModulusOfElasticityMeasureWrapper }
         *     
         */
        public IfcModulusOfElasticityMeasureWrapper getIfcModulusOfElasticityMeasureWrapper() {
            return ifcModulusOfElasticityMeasureWrapper;
        }

        /**
         * Sets the value of the ifcModulusOfElasticityMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcModulusOfElasticityMeasureWrapper }
         *     
         */
        public void setIfcModulusOfElasticityMeasureWrapper(IfcModulusOfElasticityMeasureWrapper value) {
            this.ifcModulusOfElasticityMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcModulusOfLinearSubgradeReactionMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcModulusOfLinearSubgradeReactionMeasureWrapper }
         *     
         */
        public IfcModulusOfLinearSubgradeReactionMeasureWrapper getIfcModulusOfLinearSubgradeReactionMeasureWrapper() {
            return ifcModulusOfLinearSubgradeReactionMeasureWrapper;
        }

        /**
         * Sets the value of the ifcModulusOfLinearSubgradeReactionMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcModulusOfLinearSubgradeReactionMeasureWrapper }
         *     
         */
        public void setIfcModulusOfLinearSubgradeReactionMeasureWrapper(IfcModulusOfLinearSubgradeReactionMeasureWrapper value) {
            this.ifcModulusOfLinearSubgradeReactionMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcModulusOfRotationalSubgradeReactionMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcModulusOfRotationalSubgradeReactionMeasureWrapper }
         *     
         */
        public IfcModulusOfRotationalSubgradeReactionMeasureWrapper getIfcModulusOfRotationalSubgradeReactionMeasureWrapper() {
            return ifcModulusOfRotationalSubgradeReactionMeasureWrapper;
        }

        /**
         * Sets the value of the ifcModulusOfRotationalSubgradeReactionMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcModulusOfRotationalSubgradeReactionMeasureWrapper }
         *     
         */
        public void setIfcModulusOfRotationalSubgradeReactionMeasureWrapper(IfcModulusOfRotationalSubgradeReactionMeasureWrapper value) {
            this.ifcModulusOfRotationalSubgradeReactionMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcModulusOfSubgradeReactionMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcModulusOfSubgradeReactionMeasureWrapper }
         *     
         */
        public IfcModulusOfSubgradeReactionMeasureWrapper getIfcModulusOfSubgradeReactionMeasureWrapper() {
            return ifcModulusOfSubgradeReactionMeasureWrapper;
        }

        /**
         * Sets the value of the ifcModulusOfSubgradeReactionMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcModulusOfSubgradeReactionMeasureWrapper }
         *     
         */
        public void setIfcModulusOfSubgradeReactionMeasureWrapper(IfcModulusOfSubgradeReactionMeasureWrapper value) {
            this.ifcModulusOfSubgradeReactionMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcMoistureDiffusivityMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcMoistureDiffusivityMeasureWrapper }
         *     
         */
        public IfcMoistureDiffusivityMeasureWrapper getIfcMoistureDiffusivityMeasureWrapper() {
            return ifcMoistureDiffusivityMeasureWrapper;
        }

        /**
         * Sets the value of the ifcMoistureDiffusivityMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcMoistureDiffusivityMeasureWrapper }
         *     
         */
        public void setIfcMoistureDiffusivityMeasureWrapper(IfcMoistureDiffusivityMeasureWrapper value) {
            this.ifcMoistureDiffusivityMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcMolecularWeightMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcMolecularWeightMeasureWrapper }
         *     
         */
        public IfcMolecularWeightMeasureWrapper getIfcMolecularWeightMeasureWrapper() {
            return ifcMolecularWeightMeasureWrapper;
        }

        /**
         * Sets the value of the ifcMolecularWeightMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcMolecularWeightMeasureWrapper }
         *     
         */
        public void setIfcMolecularWeightMeasureWrapper(IfcMolecularWeightMeasureWrapper value) {
            this.ifcMolecularWeightMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcMomentOfInertiaMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcMomentOfInertiaMeasureWrapper }
         *     
         */
        public IfcMomentOfInertiaMeasureWrapper getIfcMomentOfInertiaMeasureWrapper() {
            return ifcMomentOfInertiaMeasureWrapper;
        }

        /**
         * Sets the value of the ifcMomentOfInertiaMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcMomentOfInertiaMeasureWrapper }
         *     
         */
        public void setIfcMomentOfInertiaMeasureWrapper(IfcMomentOfInertiaMeasureWrapper value) {
            this.ifcMomentOfInertiaMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcMonetaryMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcMonetaryMeasureWrapper }
         *     
         */
        public IfcMonetaryMeasureWrapper getIfcMonetaryMeasureWrapper() {
            return ifcMonetaryMeasureWrapper;
        }

        /**
         * Sets the value of the ifcMonetaryMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcMonetaryMeasureWrapper }
         *     
         */
        public void setIfcMonetaryMeasureWrapper(IfcMonetaryMeasureWrapper value) {
            this.ifcMonetaryMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcNonNegativeLengthMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcNonNegativeLengthMeasureWrapper }
         *     
         */
        public IfcNonNegativeLengthMeasureWrapper getIfcNonNegativeLengthMeasureWrapper() {
            return ifcNonNegativeLengthMeasureWrapper;
        }

        /**
         * Sets the value of the ifcNonNegativeLengthMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcNonNegativeLengthMeasureWrapper }
         *     
         */
        public void setIfcNonNegativeLengthMeasureWrapper(IfcNonNegativeLengthMeasureWrapper value) {
            this.ifcNonNegativeLengthMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcNormalisedRatioMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcNormalisedRatioMeasureWrapper }
         *     
         */
        public IfcNormalisedRatioMeasureWrapper getIfcNormalisedRatioMeasureWrapper() {
            return ifcNormalisedRatioMeasureWrapper;
        }

        /**
         * Sets the value of the ifcNormalisedRatioMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcNormalisedRatioMeasureWrapper }
         *     
         */
        public void setIfcNormalisedRatioMeasureWrapper(IfcNormalisedRatioMeasureWrapper value) {
            this.ifcNormalisedRatioMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcNumericMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcNumericMeasureWrapper }
         *     
         */
        public IfcNumericMeasureWrapper getIfcNumericMeasureWrapper() {
            return ifcNumericMeasureWrapper;
        }

        /**
         * Sets the value of the ifcNumericMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcNumericMeasureWrapper }
         *     
         */
        public void setIfcNumericMeasureWrapper(IfcNumericMeasureWrapper value) {
            this.ifcNumericMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcPHMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcPHMeasureWrapper }
         *     
         */
        public IfcPHMeasureWrapper getIfcPHMeasureWrapper() {
            return ifcPHMeasureWrapper;
        }

        /**
         * Sets the value of the ifcPHMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcPHMeasureWrapper }
         *     
         */
        public void setIfcPHMeasureWrapper(IfcPHMeasureWrapper value) {
            this.ifcPHMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcParameterValueWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcParameterValueWrapper }
         *     
         */
        public IfcParameterValueWrapper getIfcParameterValueWrapper() {
            return ifcParameterValueWrapper;
        }

        /**
         * Sets the value of the ifcParameterValueWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcParameterValueWrapper }
         *     
         */
        public void setIfcParameterValueWrapper(IfcParameterValueWrapper value) {
            this.ifcParameterValueWrapper = value;
        }

        /**
         * Gets the value of the ifcPlanarForceMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcPlanarForceMeasureWrapper }
         *     
         */
        public IfcPlanarForceMeasureWrapper getIfcPlanarForceMeasureWrapper() {
            return ifcPlanarForceMeasureWrapper;
        }

        /**
         * Sets the value of the ifcPlanarForceMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcPlanarForceMeasureWrapper }
         *     
         */
        public void setIfcPlanarForceMeasureWrapper(IfcPlanarForceMeasureWrapper value) {
            this.ifcPlanarForceMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcPlaneAngleMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcPlaneAngleMeasureWrapper }
         *     
         */
        public IfcPlaneAngleMeasureWrapper getIfcPlaneAngleMeasureWrapper() {
            return ifcPlaneAngleMeasureWrapper;
        }

        /**
         * Sets the value of the ifcPlaneAngleMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcPlaneAngleMeasureWrapper }
         *     
         */
        public void setIfcPlaneAngleMeasureWrapper(IfcPlaneAngleMeasureWrapper value) {
            this.ifcPlaneAngleMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcPositiveIntegerWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcPositiveIntegerWrapper }
         *     
         */
        public IfcPositiveIntegerWrapper getIfcPositiveIntegerWrapper() {
            return ifcPositiveIntegerWrapper;
        }

        /**
         * Sets the value of the ifcPositiveIntegerWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcPositiveIntegerWrapper }
         *     
         */
        public void setIfcPositiveIntegerWrapper(IfcPositiveIntegerWrapper value) {
            this.ifcPositiveIntegerWrapper = value;
        }

        /**
         * Gets the value of the ifcPositiveLengthMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcPositiveLengthMeasureWrapper }
         *     
         */
        public IfcPositiveLengthMeasureWrapper getIfcPositiveLengthMeasureWrapper() {
            return ifcPositiveLengthMeasureWrapper;
        }

        /**
         * Sets the value of the ifcPositiveLengthMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcPositiveLengthMeasureWrapper }
         *     
         */
        public void setIfcPositiveLengthMeasureWrapper(IfcPositiveLengthMeasureWrapper value) {
            this.ifcPositiveLengthMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcPositivePlaneAngleMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcPositivePlaneAngleMeasureWrapper }
         *     
         */
        public IfcPositivePlaneAngleMeasureWrapper getIfcPositivePlaneAngleMeasureWrapper() {
            return ifcPositivePlaneAngleMeasureWrapper;
        }

        /**
         * Sets the value of the ifcPositivePlaneAngleMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcPositivePlaneAngleMeasureWrapper }
         *     
         */
        public void setIfcPositivePlaneAngleMeasureWrapper(IfcPositivePlaneAngleMeasureWrapper value) {
            this.ifcPositivePlaneAngleMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcPositiveRatioMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcPositiveRatioMeasureWrapper }
         *     
         */
        public IfcPositiveRatioMeasureWrapper getIfcPositiveRatioMeasureWrapper() {
            return ifcPositiveRatioMeasureWrapper;
        }

        /**
         * Sets the value of the ifcPositiveRatioMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcPositiveRatioMeasureWrapper }
         *     
         */
        public void setIfcPositiveRatioMeasureWrapper(IfcPositiveRatioMeasureWrapper value) {
            this.ifcPositiveRatioMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcPowerMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcPowerMeasureWrapper }
         *     
         */
        public IfcPowerMeasureWrapper getIfcPowerMeasureWrapper() {
            return ifcPowerMeasureWrapper;
        }

        /**
         * Sets the value of the ifcPowerMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcPowerMeasureWrapper }
         *     
         */
        public void setIfcPowerMeasureWrapper(IfcPowerMeasureWrapper value) {
            this.ifcPowerMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcPressureMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcPressureMeasureWrapper }
         *     
         */
        public IfcPressureMeasureWrapper getIfcPressureMeasureWrapper() {
            return ifcPressureMeasureWrapper;
        }

        /**
         * Sets the value of the ifcPressureMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcPressureMeasureWrapper }
         *     
         */
        public void setIfcPressureMeasureWrapper(IfcPressureMeasureWrapper value) {
            this.ifcPressureMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcRadioActivityMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcRadioActivityMeasureWrapper }
         *     
         */
        public IfcRadioActivityMeasureWrapper getIfcRadioActivityMeasureWrapper() {
            return ifcRadioActivityMeasureWrapper;
        }

        /**
         * Sets the value of the ifcRadioActivityMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcRadioActivityMeasureWrapper }
         *     
         */
        public void setIfcRadioActivityMeasureWrapper(IfcRadioActivityMeasureWrapper value) {
            this.ifcRadioActivityMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcRatioMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcRatioMeasureWrapper }
         *     
         */
        public IfcRatioMeasureWrapper getIfcRatioMeasureWrapper() {
            return ifcRatioMeasureWrapper;
        }

        /**
         * Sets the value of the ifcRatioMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcRatioMeasureWrapper }
         *     
         */
        public void setIfcRatioMeasureWrapper(IfcRatioMeasureWrapper value) {
            this.ifcRatioMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcRealWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcRealWrapper }
         *     
         */
        public IfcRealWrapper getIfcRealWrapper() {
            return ifcRealWrapper;
        }

        /**
         * Sets the value of the ifcRealWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcRealWrapper }
         *     
         */
        public void setIfcRealWrapper(IfcRealWrapper value) {
            this.ifcRealWrapper = value;
        }

        /**
         * Gets the value of the ifcReference property.
         * 
         * @return
         *     possible object is
         *     {@link IfcReference }
         *     
         */
        public IfcReference getIfcReference() {
            return ifcReference;
        }

        /**
         * Sets the value of the ifcReference property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcReference }
         *     
         */
        public void setIfcReference(IfcReference value) {
            this.ifcReference = value;
        }

        /**
         * Gets the value of the ifcRotationalFrequencyMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcRotationalFrequencyMeasureWrapper }
         *     
         */
        public IfcRotationalFrequencyMeasureWrapper getIfcRotationalFrequencyMeasureWrapper() {
            return ifcRotationalFrequencyMeasureWrapper;
        }

        /**
         * Sets the value of the ifcRotationalFrequencyMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcRotationalFrequencyMeasureWrapper }
         *     
         */
        public void setIfcRotationalFrequencyMeasureWrapper(IfcRotationalFrequencyMeasureWrapper value) {
            this.ifcRotationalFrequencyMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcRotationalMassMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcRotationalMassMeasureWrapper }
         *     
         */
        public IfcRotationalMassMeasureWrapper getIfcRotationalMassMeasureWrapper() {
            return ifcRotationalMassMeasureWrapper;
        }

        /**
         * Sets the value of the ifcRotationalMassMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcRotationalMassMeasureWrapper }
         *     
         */
        public void setIfcRotationalMassMeasureWrapper(IfcRotationalMassMeasureWrapper value) {
            this.ifcRotationalMassMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcRotationalStiffnessMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcRotationalStiffnessMeasureWrapper }
         *     
         */
        public IfcRotationalStiffnessMeasureWrapper getIfcRotationalStiffnessMeasureWrapper() {
            return ifcRotationalStiffnessMeasureWrapper;
        }

        /**
         * Sets the value of the ifcRotationalStiffnessMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcRotationalStiffnessMeasureWrapper }
         *     
         */
        public void setIfcRotationalStiffnessMeasureWrapper(IfcRotationalStiffnessMeasureWrapper value) {
            this.ifcRotationalStiffnessMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcSectionModulusMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcSectionModulusMeasureWrapper }
         *     
         */
        public IfcSectionModulusMeasureWrapper getIfcSectionModulusMeasureWrapper() {
            return ifcSectionModulusMeasureWrapper;
        }

        /**
         * Sets the value of the ifcSectionModulusMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcSectionModulusMeasureWrapper }
         *     
         */
        public void setIfcSectionModulusMeasureWrapper(IfcSectionModulusMeasureWrapper value) {
            this.ifcSectionModulusMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcSectionalAreaIntegralMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcSectionalAreaIntegralMeasureWrapper }
         *     
         */
        public IfcSectionalAreaIntegralMeasureWrapper getIfcSectionalAreaIntegralMeasureWrapper() {
            return ifcSectionalAreaIntegralMeasureWrapper;
        }

        /**
         * Sets the value of the ifcSectionalAreaIntegralMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcSectionalAreaIntegralMeasureWrapper }
         *     
         */
        public void setIfcSectionalAreaIntegralMeasureWrapper(IfcSectionalAreaIntegralMeasureWrapper value) {
            this.ifcSectionalAreaIntegralMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcShearModulusMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcShearModulusMeasureWrapper }
         *     
         */
        public IfcShearModulusMeasureWrapper getIfcShearModulusMeasureWrapper() {
            return ifcShearModulusMeasureWrapper;
        }

        /**
         * Sets the value of the ifcShearModulusMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcShearModulusMeasureWrapper }
         *     
         */
        public void setIfcShearModulusMeasureWrapper(IfcShearModulusMeasureWrapper value) {
            this.ifcShearModulusMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcSolidAngleMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcSolidAngleMeasureWrapper }
         *     
         */
        public IfcSolidAngleMeasureWrapper getIfcSolidAngleMeasureWrapper() {
            return ifcSolidAngleMeasureWrapper;
        }

        /**
         * Sets the value of the ifcSolidAngleMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcSolidAngleMeasureWrapper }
         *     
         */
        public void setIfcSolidAngleMeasureWrapper(IfcSolidAngleMeasureWrapper value) {
            this.ifcSolidAngleMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcSoundPowerLevelMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcSoundPowerLevelMeasureWrapper }
         *     
         */
        public IfcSoundPowerLevelMeasureWrapper getIfcSoundPowerLevelMeasureWrapper() {
            return ifcSoundPowerLevelMeasureWrapper;
        }

        /**
         * Sets the value of the ifcSoundPowerLevelMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcSoundPowerLevelMeasureWrapper }
         *     
         */
        public void setIfcSoundPowerLevelMeasureWrapper(IfcSoundPowerLevelMeasureWrapper value) {
            this.ifcSoundPowerLevelMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcSoundPowerMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcSoundPowerMeasureWrapper }
         *     
         */
        public IfcSoundPowerMeasureWrapper getIfcSoundPowerMeasureWrapper() {
            return ifcSoundPowerMeasureWrapper;
        }

        /**
         * Sets the value of the ifcSoundPowerMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcSoundPowerMeasureWrapper }
         *     
         */
        public void setIfcSoundPowerMeasureWrapper(IfcSoundPowerMeasureWrapper value) {
            this.ifcSoundPowerMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcSoundPressureLevelMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcSoundPressureLevelMeasureWrapper }
         *     
         */
        public IfcSoundPressureLevelMeasureWrapper getIfcSoundPressureLevelMeasureWrapper() {
            return ifcSoundPressureLevelMeasureWrapper;
        }

        /**
         * Sets the value of the ifcSoundPressureLevelMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcSoundPressureLevelMeasureWrapper }
         *     
         */
        public void setIfcSoundPressureLevelMeasureWrapper(IfcSoundPressureLevelMeasureWrapper value) {
            this.ifcSoundPressureLevelMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcSoundPressureMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcSoundPressureMeasureWrapper }
         *     
         */
        public IfcSoundPressureMeasureWrapper getIfcSoundPressureMeasureWrapper() {
            return ifcSoundPressureMeasureWrapper;
        }

        /**
         * Sets the value of the ifcSoundPressureMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcSoundPressureMeasureWrapper }
         *     
         */
        public void setIfcSoundPressureMeasureWrapper(IfcSoundPressureMeasureWrapper value) {
            this.ifcSoundPressureMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcSpecificHeatCapacityMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcSpecificHeatCapacityMeasureWrapper }
         *     
         */
        public IfcSpecificHeatCapacityMeasureWrapper getIfcSpecificHeatCapacityMeasureWrapper() {
            return ifcSpecificHeatCapacityMeasureWrapper;
        }

        /**
         * Sets the value of the ifcSpecificHeatCapacityMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcSpecificHeatCapacityMeasureWrapper }
         *     
         */
        public void setIfcSpecificHeatCapacityMeasureWrapper(IfcSpecificHeatCapacityMeasureWrapper value) {
            this.ifcSpecificHeatCapacityMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcTable property.
         * 
         * @return
         *     possible object is
         *     {@link IfcTable }
         *     
         */
        public IfcTable getIfcTable() {
            return ifcTable;
        }

        /**
         * Sets the value of the ifcTable property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcTable }
         *     
         */
        public void setIfcTable(IfcTable value) {
            this.ifcTable = value;
        }

        /**
         * Gets the value of the ifcTemperatureGradientMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcTemperatureGradientMeasureWrapper }
         *     
         */
        public IfcTemperatureGradientMeasureWrapper getIfcTemperatureGradientMeasureWrapper() {
            return ifcTemperatureGradientMeasureWrapper;
        }

        /**
         * Sets the value of the ifcTemperatureGradientMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcTemperatureGradientMeasureWrapper }
         *     
         */
        public void setIfcTemperatureGradientMeasureWrapper(IfcTemperatureGradientMeasureWrapper value) {
            this.ifcTemperatureGradientMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcTemperatureRateOfChangeMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcTemperatureRateOfChangeMeasureWrapper }
         *     
         */
        public IfcTemperatureRateOfChangeMeasureWrapper getIfcTemperatureRateOfChangeMeasureWrapper() {
            return ifcTemperatureRateOfChangeMeasureWrapper;
        }

        /**
         * Sets the value of the ifcTemperatureRateOfChangeMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcTemperatureRateOfChangeMeasureWrapper }
         *     
         */
        public void setIfcTemperatureRateOfChangeMeasureWrapper(IfcTemperatureRateOfChangeMeasureWrapper value) {
            this.ifcTemperatureRateOfChangeMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcTextWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcTextWrapper }
         *     
         */
        public IfcTextWrapper getIfcTextWrapper() {
            return ifcTextWrapper;
        }

        /**
         * Sets the value of the ifcTextWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcTextWrapper }
         *     
         */
        public void setIfcTextWrapper(IfcTextWrapper value) {
            this.ifcTextWrapper = value;
        }

        /**
         * Gets the value of the ifcThermalAdmittanceMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcThermalAdmittanceMeasureWrapper }
         *     
         */
        public IfcThermalAdmittanceMeasureWrapper getIfcThermalAdmittanceMeasureWrapper() {
            return ifcThermalAdmittanceMeasureWrapper;
        }

        /**
         * Sets the value of the ifcThermalAdmittanceMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcThermalAdmittanceMeasureWrapper }
         *     
         */
        public void setIfcThermalAdmittanceMeasureWrapper(IfcThermalAdmittanceMeasureWrapper value) {
            this.ifcThermalAdmittanceMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcThermalConductivityMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcThermalConductivityMeasureWrapper }
         *     
         */
        public IfcThermalConductivityMeasureWrapper getIfcThermalConductivityMeasureWrapper() {
            return ifcThermalConductivityMeasureWrapper;
        }

        /**
         * Sets the value of the ifcThermalConductivityMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcThermalConductivityMeasureWrapper }
         *     
         */
        public void setIfcThermalConductivityMeasureWrapper(IfcThermalConductivityMeasureWrapper value) {
            this.ifcThermalConductivityMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcThermalExpansionCoefficientMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcThermalExpansionCoefficientMeasureWrapper }
         *     
         */
        public IfcThermalExpansionCoefficientMeasureWrapper getIfcThermalExpansionCoefficientMeasureWrapper() {
            return ifcThermalExpansionCoefficientMeasureWrapper;
        }

        /**
         * Sets the value of the ifcThermalExpansionCoefficientMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcThermalExpansionCoefficientMeasureWrapper }
         *     
         */
        public void setIfcThermalExpansionCoefficientMeasureWrapper(IfcThermalExpansionCoefficientMeasureWrapper value) {
            this.ifcThermalExpansionCoefficientMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcThermalResistanceMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcThermalResistanceMeasureWrapper }
         *     
         */
        public IfcThermalResistanceMeasureWrapper getIfcThermalResistanceMeasureWrapper() {
            return ifcThermalResistanceMeasureWrapper;
        }

        /**
         * Sets the value of the ifcThermalResistanceMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcThermalResistanceMeasureWrapper }
         *     
         */
        public void setIfcThermalResistanceMeasureWrapper(IfcThermalResistanceMeasureWrapper value) {
            this.ifcThermalResistanceMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcThermalTransmittanceMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcThermalTransmittanceMeasureWrapper }
         *     
         */
        public IfcThermalTransmittanceMeasureWrapper getIfcThermalTransmittanceMeasureWrapper() {
            return ifcThermalTransmittanceMeasureWrapper;
        }

        /**
         * Sets the value of the ifcThermalTransmittanceMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcThermalTransmittanceMeasureWrapper }
         *     
         */
        public void setIfcThermalTransmittanceMeasureWrapper(IfcThermalTransmittanceMeasureWrapper value) {
            this.ifcThermalTransmittanceMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcThermodynamicTemperatureMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcThermodynamicTemperatureMeasureWrapper }
         *     
         */
        public IfcThermodynamicTemperatureMeasureWrapper getIfcThermodynamicTemperatureMeasureWrapper() {
            return ifcThermodynamicTemperatureMeasureWrapper;
        }

        /**
         * Sets the value of the ifcThermodynamicTemperatureMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcThermodynamicTemperatureMeasureWrapper }
         *     
         */
        public void setIfcThermodynamicTemperatureMeasureWrapper(IfcThermodynamicTemperatureMeasureWrapper value) {
            this.ifcThermodynamicTemperatureMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcTimeWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcTimeWrapper }
         *     
         */
        public IfcTimeWrapper getIfcTimeWrapper() {
            return ifcTimeWrapper;
        }

        /**
         * Sets the value of the ifcTimeWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcTimeWrapper }
         *     
         */
        public void setIfcTimeWrapper(IfcTimeWrapper value) {
            this.ifcTimeWrapper = value;
        }

        /**
         * Gets the value of the ifcTimeMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcTimeMeasureWrapper }
         *     
         */
        public IfcTimeMeasureWrapper getIfcTimeMeasureWrapper() {
            return ifcTimeMeasureWrapper;
        }

        /**
         * Sets the value of the ifcTimeMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcTimeMeasureWrapper }
         *     
         */
        public void setIfcTimeMeasureWrapper(IfcTimeMeasureWrapper value) {
            this.ifcTimeMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcTimeSeries property.
         * 
         * @return
         *     possible object is
         *     {@link JAXBElement }{@code <}{@link IfcIrregularTimeSeries }{@code >}
         *     {@link JAXBElement }{@code <}{@link IfcTimeSeries }{@code >}
         *     {@link JAXBElement }{@code <}{@link IfcRegularTimeSeries }{@code >}
         *     
         */
        public JAXBElement<? extends IfcTimeSeries> getIfcTimeSeries() {
            return ifcTimeSeries;
        }

        /**
         * Sets the value of the ifcTimeSeries property.
         * 
         * @param value
         *     allowed object is
         *     {@link JAXBElement }{@code <}{@link IfcIrregularTimeSeries }{@code >}
         *     {@link JAXBElement }{@code <}{@link IfcTimeSeries }{@code >}
         *     {@link JAXBElement }{@code <}{@link IfcRegularTimeSeries }{@code >}
         *     
         */
        public void setIfcTimeSeries(JAXBElement<? extends IfcTimeSeries> value) {
            this.ifcTimeSeries = value;
        }

        /**
         * Gets the value of the ifcTimeStampWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcTimeStampWrapper }
         *     
         */
        public IfcTimeStampWrapper getIfcTimeStampWrapper() {
            return ifcTimeStampWrapper;
        }

        /**
         * Sets the value of the ifcTimeStampWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcTimeStampWrapper }
         *     
         */
        public void setIfcTimeStampWrapper(IfcTimeStampWrapper value) {
            this.ifcTimeStampWrapper = value;
        }

        /**
         * Gets the value of the ifcTorqueMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcTorqueMeasureWrapper }
         *     
         */
        public IfcTorqueMeasureWrapper getIfcTorqueMeasureWrapper() {
            return ifcTorqueMeasureWrapper;
        }

        /**
         * Sets the value of the ifcTorqueMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcTorqueMeasureWrapper }
         *     
         */
        public void setIfcTorqueMeasureWrapper(IfcTorqueMeasureWrapper value) {
            this.ifcTorqueMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcVaporPermeabilityMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcVaporPermeabilityMeasureWrapper }
         *     
         */
        public IfcVaporPermeabilityMeasureWrapper getIfcVaporPermeabilityMeasureWrapper() {
            return ifcVaporPermeabilityMeasureWrapper;
        }

        /**
         * Sets the value of the ifcVaporPermeabilityMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcVaporPermeabilityMeasureWrapper }
         *     
         */
        public void setIfcVaporPermeabilityMeasureWrapper(IfcVaporPermeabilityMeasureWrapper value) {
            this.ifcVaporPermeabilityMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcVolumeMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcVolumeMeasureWrapper }
         *     
         */
        public IfcVolumeMeasureWrapper getIfcVolumeMeasureWrapper() {
            return ifcVolumeMeasureWrapper;
        }

        /**
         * Sets the value of the ifcVolumeMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcVolumeMeasureWrapper }
         *     
         */
        public void setIfcVolumeMeasureWrapper(IfcVolumeMeasureWrapper value) {
            this.ifcVolumeMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcVolumetricFlowRateMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcVolumetricFlowRateMeasureWrapper }
         *     
         */
        public IfcVolumetricFlowRateMeasureWrapper getIfcVolumetricFlowRateMeasureWrapper() {
            return ifcVolumetricFlowRateMeasureWrapper;
        }

        /**
         * Sets the value of the ifcVolumetricFlowRateMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcVolumetricFlowRateMeasureWrapper }
         *     
         */
        public void setIfcVolumetricFlowRateMeasureWrapper(IfcVolumetricFlowRateMeasureWrapper value) {
            this.ifcVolumetricFlowRateMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcWarpingConstantMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcWarpingConstantMeasureWrapper }
         *     
         */
        public IfcWarpingConstantMeasureWrapper getIfcWarpingConstantMeasureWrapper() {
            return ifcWarpingConstantMeasureWrapper;
        }

        /**
         * Sets the value of the ifcWarpingConstantMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcWarpingConstantMeasureWrapper }
         *     
         */
        public void setIfcWarpingConstantMeasureWrapper(IfcWarpingConstantMeasureWrapper value) {
            this.ifcWarpingConstantMeasureWrapper = value;
        }

        /**
         * Gets the value of the ifcWarpingMomentMeasureWrapper property.
         * 
         * @return
         *     possible object is
         *     {@link IfcWarpingMomentMeasureWrapper }
         *     
         */
        public IfcWarpingMomentMeasureWrapper getIfcWarpingMomentMeasureWrapper() {
            return ifcWarpingMomentMeasureWrapper;
        }

        /**
         * Sets the value of the ifcWarpingMomentMeasureWrapper property.
         * 
         * @param value
         *     allowed object is
         *     {@link IfcWarpingMomentMeasureWrapper }
         *     
         */
        public void setIfcWarpingMomentMeasureWrapper(IfcWarpingMomentMeasureWrapper value) {
            this.ifcWarpingMomentMeasureWrapper = value;
        }

    }

}
