//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.27 at 01:59:57 PM CEST 
//


package generated.buildingsmart_tech.mvd_xml_1dot2;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for IfcValveTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="IfcValveTypeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="airrelease"/>
 *     &lt;enumeration value="antivacuum"/>
 *     &lt;enumeration value="changeover"/>
 *     &lt;enumeration value="check"/>
 *     &lt;enumeration value="commissioning"/>
 *     &lt;enumeration value="diverting"/>
 *     &lt;enumeration value="drawoffcock"/>
 *     &lt;enumeration value="doublecheck"/>
 *     &lt;enumeration value="doubleregulating"/>
 *     &lt;enumeration value="faucet"/>
 *     &lt;enumeration value="flushing"/>
 *     &lt;enumeration value="gascock"/>
 *     &lt;enumeration value="gastap"/>
 *     &lt;enumeration value="isolating"/>
 *     &lt;enumeration value="mixing"/>
 *     &lt;enumeration value="pressurereducing"/>
 *     &lt;enumeration value="pressurerelief"/>
 *     &lt;enumeration value="regulating"/>
 *     &lt;enumeration value="safetycutoff"/>
 *     &lt;enumeration value="steamtrap"/>
 *     &lt;enumeration value="stopcock"/>
 *     &lt;enumeration value="userdefined"/>
 *     &lt;enumeration value="notdefined"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "IfcValveTypeEnum")
@XmlEnum
public enum IfcValveTypeEnum {

    @XmlEnumValue("airrelease")
    AIRRELEASE("airrelease"),
    @XmlEnumValue("antivacuum")
    ANTIVACUUM("antivacuum"),
    @XmlEnumValue("changeover")
    CHANGEOVER("changeover"),
    @XmlEnumValue("check")
    CHECK("check"),
    @XmlEnumValue("commissioning")
    COMMISSIONING("commissioning"),
    @XmlEnumValue("diverting")
    DIVERTING("diverting"),
    @XmlEnumValue("drawoffcock")
    DRAWOFFCOCK("drawoffcock"),
    @XmlEnumValue("doublecheck")
    DOUBLECHECK("doublecheck"),
    @XmlEnumValue("doubleregulating")
    DOUBLEREGULATING("doubleregulating"),
    @XmlEnumValue("faucet")
    FAUCET("faucet"),
    @XmlEnumValue("flushing")
    FLUSHING("flushing"),
    @XmlEnumValue("gascock")
    GASCOCK("gascock"),
    @XmlEnumValue("gastap")
    GASTAP("gastap"),
    @XmlEnumValue("isolating")
    ISOLATING("isolating"),
    @XmlEnumValue("mixing")
    MIXING("mixing"),
    @XmlEnumValue("pressurereducing")
    PRESSUREREDUCING("pressurereducing"),
    @XmlEnumValue("pressurerelief")
    PRESSURERELIEF("pressurerelief"),
    @XmlEnumValue("regulating")
    REGULATING("regulating"),
    @XmlEnumValue("safetycutoff")
    SAFETYCUTOFF("safetycutoff"),
    @XmlEnumValue("steamtrap")
    STEAMTRAP("steamtrap"),
    @XmlEnumValue("stopcock")
    STOPCOCK("stopcock"),
    @XmlEnumValue("userdefined")
    USERDEFINED("userdefined"),
    @XmlEnumValue("notdefined")
    NOTDEFINED("notdefined");
    private final String value;

    IfcValveTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static IfcValveTypeEnum fromValue(String v) {
        for (IfcValveTypeEnum c: IfcValveTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
