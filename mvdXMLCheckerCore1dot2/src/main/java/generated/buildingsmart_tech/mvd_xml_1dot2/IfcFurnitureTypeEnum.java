//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.27 at 01:59:57 PM CEST 
//


package generated.buildingsmart_tech.mvd_xml_1dot2;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for IfcFurnitureTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="IfcFurnitureTypeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="chair"/>
 *     &lt;enumeration value="table"/>
 *     &lt;enumeration value="desk"/>
 *     &lt;enumeration value="bed"/>
 *     &lt;enumeration value="filecabinet"/>
 *     &lt;enumeration value="shelf"/>
 *     &lt;enumeration value="sofa"/>
 *     &lt;enumeration value="userdefined"/>
 *     &lt;enumeration value="notdefined"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "IfcFurnitureTypeEnum")
@XmlEnum
public enum IfcFurnitureTypeEnum {

    @XmlEnumValue("chair")
    CHAIR("chair"),
    @XmlEnumValue("table")
    TABLE("table"),
    @XmlEnumValue("desk")
    DESK("desk"),
    @XmlEnumValue("bed")
    BED("bed"),
    @XmlEnumValue("filecabinet")
    FILECABINET("filecabinet"),
    @XmlEnumValue("shelf")
    SHELF("shelf"),
    @XmlEnumValue("sofa")
    SOFA("sofa"),
    @XmlEnumValue("userdefined")
    USERDEFINED("userdefined"),
    @XmlEnumValue("notdefined")
    NOTDEFINED("notdefined");
    private final String value;

    IfcFurnitureTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static IfcFurnitureTypeEnum fromValue(String v) {
        for (IfcFurnitureTypeEnum c: IfcFurnitureTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
