//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.27 at 01:59:57 PM CEST 
//


package generated.buildingsmart_tech.mvd_xml_1dot2;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for IfcObjectiveEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="IfcObjectiveEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="codecompliance"/>
 *     &lt;enumeration value="codewaiver"/>
 *     &lt;enumeration value="designintent"/>
 *     &lt;enumeration value="external"/>
 *     &lt;enumeration value="healthandsafety"/>
 *     &lt;enumeration value="mergeconflict"/>
 *     &lt;enumeration value="modelview"/>
 *     &lt;enumeration value="parameter"/>
 *     &lt;enumeration value="requirement"/>
 *     &lt;enumeration value="specification"/>
 *     &lt;enumeration value="triggercondition"/>
 *     &lt;enumeration value="userdefined"/>
 *     &lt;enumeration value="notdefined"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "IfcObjectiveEnum")
@XmlEnum
public enum IfcObjectiveEnum {

    @XmlEnumValue("codecompliance")
    CODECOMPLIANCE("codecompliance"),
    @XmlEnumValue("codewaiver")
    CODEWAIVER("codewaiver"),
    @XmlEnumValue("designintent")
    DESIGNINTENT("designintent"),
    @XmlEnumValue("external")
    EXTERNAL("external"),
    @XmlEnumValue("healthandsafety")
    HEALTHANDSAFETY("healthandsafety"),
    @XmlEnumValue("mergeconflict")
    MERGECONFLICT("mergeconflict"),
    @XmlEnumValue("modelview")
    MODELVIEW("modelview"),
    @XmlEnumValue("parameter")
    PARAMETER("parameter"),
    @XmlEnumValue("requirement")
    REQUIREMENT("requirement"),
    @XmlEnumValue("specification")
    SPECIFICATION("specification"),
    @XmlEnumValue("triggercondition")
    TRIGGERCONDITION("triggercondition"),
    @XmlEnumValue("userdefined")
    USERDEFINED("userdefined"),
    @XmlEnumValue("notdefined")
    NOTDEFINED("notdefined");
    private final String value;

    IfcObjectiveEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static IfcObjectiveEnum fromValue(String v) {
        for (IfcObjectiveEnum c: IfcObjectiveEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
