//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.27 at 01:59:57 PM CEST 
//


package generated.buildingsmart_tech.mvd_xml_1dot2;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for IfcElectricApplianceTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="IfcElectricApplianceTypeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="dishwasher"/>
 *     &lt;enumeration value="electriccooker"/>
 *     &lt;enumeration value="freestandingelectricheater"/>
 *     &lt;enumeration value="freestandingfan"/>
 *     &lt;enumeration value="freestandingwaterheater"/>
 *     &lt;enumeration value="freestandingwatercooler"/>
 *     &lt;enumeration value="freezer"/>
 *     &lt;enumeration value="fridge_freezer"/>
 *     &lt;enumeration value="handdryer"/>
 *     &lt;enumeration value="kitchenmachine"/>
 *     &lt;enumeration value="microwave"/>
 *     &lt;enumeration value="photocopier"/>
 *     &lt;enumeration value="refrigerator"/>
 *     &lt;enumeration value="tumbledryer"/>
 *     &lt;enumeration value="vendingmachine"/>
 *     &lt;enumeration value="washingmachine"/>
 *     &lt;enumeration value="userdefined"/>
 *     &lt;enumeration value="notdefined"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "IfcElectricApplianceTypeEnum")
@XmlEnum
public enum IfcElectricApplianceTypeEnum {

    @XmlEnumValue("dishwasher")
    DISHWASHER("dishwasher"),
    @XmlEnumValue("electriccooker")
    ELECTRICCOOKER("electriccooker"),
    @XmlEnumValue("freestandingelectricheater")
    FREESTANDINGELECTRICHEATER("freestandingelectricheater"),
    @XmlEnumValue("freestandingfan")
    FREESTANDINGFAN("freestandingfan"),
    @XmlEnumValue("freestandingwaterheater")
    FREESTANDINGWATERHEATER("freestandingwaterheater"),
    @XmlEnumValue("freestandingwatercooler")
    FREESTANDINGWATERCOOLER("freestandingwatercooler"),
    @XmlEnumValue("freezer")
    FREEZER("freezer"),
    @XmlEnumValue("fridge_freezer")
    FRIDGE_FREEZER("fridge_freezer"),
    @XmlEnumValue("handdryer")
    HANDDRYER("handdryer"),
    @XmlEnumValue("kitchenmachine")
    KITCHENMACHINE("kitchenmachine"),
    @XmlEnumValue("microwave")
    MICROWAVE("microwave"),
    @XmlEnumValue("photocopier")
    PHOTOCOPIER("photocopier"),
    @XmlEnumValue("refrigerator")
    REFRIGERATOR("refrigerator"),
    @XmlEnumValue("tumbledryer")
    TUMBLEDRYER("tumbledryer"),
    @XmlEnumValue("vendingmachine")
    VENDINGMACHINE("vendingmachine"),
    @XmlEnumValue("washingmachine")
    WASHINGMACHINE("washingmachine"),
    @XmlEnumValue("userdefined")
    USERDEFINED("userdefined"),
    @XmlEnumValue("notdefined")
    NOTDEFINED("notdefined");
    private final String value;

    IfcElectricApplianceTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static IfcElectricApplianceTypeEnum fromValue(String v) {
        for (IfcElectricApplianceTypeEnum c: IfcElectricApplianceTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
