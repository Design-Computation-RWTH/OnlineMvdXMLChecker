//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.27 at 01:59:57 PM CEST 
//


package generated.buildingsmart_tech.mvd_xml_1dot2;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for IfcBenchmarkEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="IfcBenchmarkEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="greaterthan"/>
 *     &lt;enumeration value="greaterthanorequalto"/>
 *     &lt;enumeration value="lessthan"/>
 *     &lt;enumeration value="lessthanorequalto"/>
 *     &lt;enumeration value="equalto"/>
 *     &lt;enumeration value="notequalto"/>
 *     &lt;enumeration value="includes"/>
 *     &lt;enumeration value="notincludes"/>
 *     &lt;enumeration value="includedin"/>
 *     &lt;enumeration value="notincludedin"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "IfcBenchmarkEnum")
@XmlEnum
public enum IfcBenchmarkEnum {

    @XmlEnumValue("greaterthan")
    GREATERTHAN("greaterthan"),
    @XmlEnumValue("greaterthanorequalto")
    GREATERTHANOREQUALTO("greaterthanorequalto"),
    @XmlEnumValue("lessthan")
    LESSTHAN("lessthan"),
    @XmlEnumValue("lessthanorequalto")
    LESSTHANOREQUALTO("lessthanorequalto"),
    @XmlEnumValue("equalto")
    EQUALTO("equalto"),
    @XmlEnumValue("notequalto")
    NOTEQUALTO("notequalto"),
    @XmlEnumValue("includes")
    INCLUDES("includes"),
    @XmlEnumValue("notincludes")
    NOTINCLUDES("notincludes"),
    @XmlEnumValue("includedin")
    INCLUDEDIN("includedin"),
    @XmlEnumValue("notincludedin")
    NOTINCLUDEDIN("notincludedin");
    private final String value;

    IfcBenchmarkEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static IfcBenchmarkEnum fromValue(String v) {
        for (IfcBenchmarkEnum c: IfcBenchmarkEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
